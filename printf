#include "main.h"
#include <stdio.h>

/**
 * _printf - Custom implementation of the printf function
 * @format: Format string
 * @...: Optional arguments
 *
 * Return: Number of characters printed
 */
int _printf(const char *format, ...)
{
	va_list args;
	int format_iterator = 0, length = 0;
	int struct_iterator;
	fs op[] = {
		{"%c", char_output}, {"%s", print_str}, {"%%", print_perc},
		{"%d", print_sint}, {"%i", print_usint},
		{"%u", print_us_u}, {"%b", print_binary_con},
		{"%o", print_oct}, {"%x", print_hex_2}, {"%X", print_hex_4},
		{"%S", print_hex_str}, {"%p", print_ptr}
	};

	if (format == NULL || (format[0] == '%' && format[1] == '\0'))
		return (-1);

	va_start(args, format);

	if (format == NULL || (format[0] == '%' && format[1] == ' '))
		return (-1);

	while (format[format_iterator] != '\0')
	{
		struct_iterator = 11;

		while (struct_iterator >= 0)
		{
			if (op[struct_iterator].op[0] == format[format_iterator] &&
				op[struct_iterator].op[1] == format[format_iterator + 1])
			{
				length += op[struct_iterator].func(args);
				format_iterator += 2;
				break;
			}
			struct_iterator--;
		}

		if (struct_iterator < 0)
		{
			_putchar(format[format_iterator]);
			length++;
		}

		format_iterator++;
	}

	va_end(args);
	return (length);
}
